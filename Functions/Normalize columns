#create list of columns within dataframe to normalize
categorylist = list(df.iloc[:,9:51].columns)
print(categorylist[:10])

['funded_category_advertising', 'funded_category_analytics', 'funded_category_automotive', 'funded_category_biotech', 
'funded_category_cleantech', 'funded_category_consulting', 'funded_category_design', 'funded_category_ecommerce', 
'funded_category_education', 'funded_category_enterprise']

#create new column in dataframe for the total number of investments made
df['total_investment'] = (df.funded_object_status_acquired + 
                                    df.funded_object_status_closed +
                                    df.funded_object_status_ipo +
                                    df.funded_object_status_operating)

#define function that removes the repetitive part of each member then adds '_normalized'
normalizednames = []
def newcols(columnlist):
    n = 0
    for i in columnlist:
        normalizednames.append(columnlist[n][16:] + '_normalized')
        n += 1
    normalizednames

#call the function using the aforementioned 'categorylist'
newcols(categorylist)
normalizednames[:10]

['advertising_normalized',
 'analytics_normalized',
 'automotive_normalized',
 'biotech_normalized',
 'cleantech_normalized',
 'consulting_normalized',
 'design_normalized',
 'ecommerce_normalized',
 'education_normalized',
 'enterprise_normalized']

#define function that creates a new column in the dataframe for each element of the list, and normalizes it
def normalizedstatus(column):
    n=0
    for i in column:
        df[str(normalizednames[n])] = (df[i]/df.total_investment)*1.0
        n += 1   

#call the function on the original list of columns
normalizedstatus(categorylist)
